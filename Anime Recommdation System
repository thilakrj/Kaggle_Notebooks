{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaA100","dataSources":[{"sourceId":1094,"sourceType":"datasetVersion","datasetId":571},{"sourceId":363127,"sourceType":"modelInstanceVersion","isSourceIdPinned":false,"modelInstanceId":301507,"modelId":322000}],"dockerImageVersionId":31011,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/sripalthilakraj/anime-recommdation-system?scriptVersionId=237019123\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:25:56.506008Z","iopub.execute_input":"2025-04-30T11:25:56.506677Z","iopub.status.idle":"2025-04-30T11:25:56.522729Z","shell.execute_reply.started":"2025-04-30T11:25:56.506655Z","shell.execute_reply":"2025-04-30T11:25:56.522093Z"},"_kg_hide-input":true,"_kg_hide-output":true,"jupyter":{"source_hidden":true}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# **üìñ Anime Adventure Blog: How We Built a Smart Recommendation Bot**\n","metadata":{}},{"cell_type":"markdown","source":"## **üß† Model - Qwen3**\nQwen3 is a large language model (LLM) developed by Alibaba Cloud, part of the Qwen series ‚Äî one of the most powerful open-source LLMs available today. It's trained on massive amounts of text data from the web, books, code, and more.\n\n## üîç Key Features of Qwen3:\n| Feature                     | Description                                                                     |\n|-----------------------------|---------------------------------------------------------------------------------|\n| Multilingual Support        | Understands and generates text in multiple languages including English, Chinese, Japanese, Korean, etc. |\n| Code Writing & Explanation  | Write scripts, debug, or explain programming logic.                             |\n| Dialogue Understanding      | Built to understand and generate conversationally natural responses.            |\n| Creative Writing            | Generate stories, poems, screenplays, and fictional worlds.                     |\n| Reasoning & Logic           | Solve puzzles, math problems, and logical questions.                             |\n| Fine-tuned for Tasks        | Some versions are fine-tuned for specific domains like storytelling, coding, and chatbots. |\n","metadata":{}},{"cell_type":"markdown","source":"## **üìå Task Outline: What This Notebook Does**\n\nThe notebook you're building leverages Qwen3‚Äôs capabilities in combination with a real anime recommendation dataset, allowing users to:\n\n- Understand Anime Trends\n- Generate Personalized Anime Recommendations\n- Combine Data Filtering with AI Creativity\n- Anime Recommendation depends on out mood using Qwen Thinking mode.","metadata":{}},{"cell_type":"markdown","source":"## üîß Setup & Dependencies","metadata":{}},{"cell_type":"code","source":"# Import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\nimport torch\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:25:56.523709Z","iopub.execute_input":"2025-04-30T11:25:56.52404Z","iopub.status.idle":"2025-04-30T11:25:56.527153Z","shell.execute_reply.started":"2025-04-30T11:25:56.524024Z","shell.execute_reply":"2025-04-30T11:25:56.526657Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## üîë Load Qwen3 Model and Tokenizer\n","metadata":{}},{"cell_type":"code","source":"# Load Qwen 0.6B model \nmodel_path = \"/kaggle/input/qwen-3/transformers/0.6b-base/1\"\ntokenizer = AutoTokenizer.from_pretrained(model_path)\nmodel = AutoModelForCausalLM.from_pretrained(model_path).to(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\n# Load dataset\ndf = pd.read_csv(\"/kaggle/input/anime-recommendations-database/anime.csv\")\nprint(df.head(5))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:25:56.527665Z","iopub.execute_input":"2025-04-30T11:25:56.527823Z","iopub.status.idle":"2025-04-30T11:25:58.131394Z","shell.execute_reply.started":"2025-04-30T11:25:56.52781Z","shell.execute_reply":"2025-04-30T11:25:58.130805Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## üìä Explore the Anime Dataset\n","metadata":{}},{"cell_type":"code","source":"#Filter and visualize the dataset\nprint(\"Top 5 Highest-Rated Animes:\")\ndisplay(df.sort_values(\"rating\", ascending=False).head()[[\"name\", \"genre\", \"type\", \"rating\"]])\n\nplt.figure(figsize=(10, 6))\nsns.countplot(y=\"type\", data=df, order=df[\"type\"].value_counts().index[:5])\nplt.title(\"Top 5 Anime Types (Movie/Series/etc.)\")\nplt.show()\n\nplt.figure(figsize=(10, 6))\nsns.histplot(df[\"rating\"], bins=20, kde=True)\nplt.title(\"Distribution of Anime Ratings\")\nplt.xlabel(\"Rating (Out of 10)\")\nplt.ylabel(\"Count\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:25:58.131962Z","iopub.execute_input":"2025-04-30T11:25:58.132156Z","iopub.status.idle":"2025-04-30T11:25:58.55055Z","shell.execute_reply.started":"2025-04-30T11:25:58.13214Z","shell.execute_reply":"2025-04-30T11:25:58.550028Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## ü§ñ Anime Recommendation Bot\n### Helper Function for Model Inference\nUsing Qwen 0.6B to generate personalized anime suggestions\n","metadata":{}},{"cell_type":"code","source":"def qwen_generate(prompt):\n    inputs = tokenizer(prompt, return_tensors=\"pt\").to(model.device)\n    outputs = model.generate(\n        **inputs,\n        max_new_tokens=200,\n        num_return_sequences=1,\n        pad_token_id=tokenizer.eos_token_id , \n        temperature=0.7,\n        do_sample=True\n    )\n    return tokenizer.decode(outputs[0], skip_special_tokens=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:25:58.551838Z","iopub.execute_input":"2025-04-30T11:25:58.552025Z","iopub.status.idle":"2025-04-30T11:25:58.555682Z","shell.execute_reply.started":"2025-04-30T11:25:58.55201Z","shell.execute_reply":"2025-04-30T11:25:58.555231Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Use Qwen 0.6B to generate personalized anime suggestions\n\n## 1: Genre-Based Recommendations\n\n","metadata":{}},{"cell_type":"code","source":"prompt = \"\"\"Suggest 3 action anime for someone who loves complex villains.  \nExplain why each matches the request. Use emojis.\"\"\"\nresponse = qwen_generate(prompt)\nprint(response)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:25:58.556197Z","iopub.execute_input":"2025-04-30T11:25:58.556368Z","iopub.status.idle":"2025-04-30T11:26:06.40388Z","shell.execute_reply.started":"2025-04-30T11:25:58.556355Z","shell.execute_reply":"2025-04-30T11:26:06.40329Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 2. Underrated Gems\n","metadata":{}},{"cell_type":"code","source":"prompt = \"List 3 underrated anime with unique art styles. Include genres and summaries.\"\nprint(qwen_generate(prompt))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:26:06.404494Z","iopub.execute_input":"2025-04-30T11:26:06.404684Z","iopub.status.idle":"2025-04-30T11:26:14.195156Z","shell.execute_reply.started":"2025-04-30T11:26:06.404669Z","shell.execute_reply":"2025-04-30T11:26:14.194577Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 3. Analyze Trends with Qwen\n","metadata":{}},{"cell_type":"code","source":"prompt = \"\"\"The dataset shows 40% of top-rated animes are action-themed.  \nExplain why action anime dominates global popularity. List 3 cultural/historical reasons.\"\"\"\nanalysis = qwen_generate(prompt)\nprint(analysis)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:26:14.195797Z","iopub.execute_input":"2025-04-30T11:26:14.195984Z","iopub.status.idle":"2025-04-30T11:26:21.967654Z","shell.execute_reply.started":"2025-04-30T11:26:14.19597Z","shell.execute_reply":"2025-04-30T11:26:21.967017Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"#### *From initial Qwen3 interactions based on general knowledge, now we will using the dataset with qwen3 mode. This shift demonstrably enhanced the LLM's ability to provide targeted and insightful anime recommendations, highlighting the strength of data-augmented LLM applications.*\n## **ü§ñ LLM + Dataset Interaction**\n### 1. Filter Recommendations Using Data - Combine dataset filters with AI creativity!\n\n","metadata":{}},{"cell_type":"code","source":"# **Convert the 'episodes' column to numeric if it's not already**\nif df['episodes'].dtype == 'object':\n    df['episodes'] = pd.to_numeric(df['episodes'], errors='coerce')\n    # Remove rows where conversion failed (NaN values in 'episodes')\n    df.dropna(subset=['episodes'], inplace=True)\n\n# Filter dataset for short series (<=12 episodes)\nshort_series = df[(df[\"episodes\"] <= 12) & (df[\"episodes\"] > 1)].sort_values(\"rating\", ascending=False)\n\n#Prompting with dataset results\nprompt = f\"\"\"Based on this list of short anime:\\n{short_series.head(5)[['name', 'genre', 'rating']]}\\n\\n\nSuggest 2 binge-worthy short series and explain why they're worth watching.\"\"\"\nprint(qwen_generate(prompt))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:26:21.968288Z","iopub.execute_input":"2025-04-30T11:26:21.968469Z","iopub.status.idle":"2025-04-30T11:26:29.721842Z","shell.execute_reply.started":"2025-04-30T11:26:21.968455Z","shell.execute_reply":"2025-04-30T11:26:29.721265Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 2. Recommend Based on Mood + Dataset\n#### Here, we leverage Qwen3's reasoning capabilities, evident in its self-generated \"thinking\" process, to understand user-stated moods. By grounding this inherent understanding with a curated list of anime titles, genres, and ratings from our dataset, we move beyond generic suggestions. This approach empowers Qwen3 to make more contextually relevant and data-backed recommendations, demonstrating the synergy between its intrinsic knowledge processing and the power of external information.\n","metadata":{}},{"cell_type":"code","source":"def recommend_anime_with_context_direct(mood, top_k=5):\n    # Build prompt context from dataset\n    context = \"\\n\".join([\n        f\"{row['name']} ({row['genre']}): Rating {row['rating']}\"\n        for _, row in df.sort_values('rating', ascending=False).head(20).iterrows()\n    ])\n\n    prompt = f\"\"\"\n<thinking>\nOkay, the user is feeling \"{mood}\". I need to recommend some anime that match this emotional state.\nFirst, I'll look at the genres typically associated with this mood ‚Äî for example, melancholic moods might align with Drama or Tragedy.\nNext, I'll scan the provided list of anime and check their genres and description.\nI should prioritize ones with high scores and positive community feedback.\nFinally, I'll summarize each recommendation clearly, explaining why it fits the mood.\n</thinking>\n\nBased on the following anime list, recommend up to {top_k} titles that best fit someone feeling \"{mood}\".\n\nAnime List:\n{context}\n\nRecommendations:\n\"\"\"\n    result = qwen_generate(prompt)\n    print(\"Recommendations:\")\n    print(result.replace('\\n', '\\n  ')) # Adding indentation for better readability\n    return result\n\n# Call func\n#recommend_anime_with_context_direct(input(\"Please Enter your mood, I will recommend top anime for you\"))\nrecommend_anime_with_context_direct('Action')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-30T11:27:05.36635Z","iopub.execute_input":"2025-04-30T11:27:05.3671Z","iopub.status.idle":"2025-04-30T11:27:13.169503Z","shell.execute_reply.started":"2025-04-30T11:27:05.367076Z","shell.execute_reply":"2025-04-30T11:27:13.168947Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### From Anime Chat to Data-Informed Insights\nWitness how structured anime data transforms Qwen3's understanding, moving beyond simple interaction to insightful analysis and targeted recommendations.","metadata":{}},{"cell_type":"markdown","source":"| **üéØ What You‚Äôre Missing If You Skip the Dataset?** | **With Dataset** | **Without Dataset** |\n|-----------------------------------------------|--------------|-----------------|\n| Filter by genre/rating/episode count          | ‚úÖ Yes       | ‚ùå No           |\n| Show actual stats (e.g., \"Top 5 rated\")       | ‚úÖ Yes       | ‚ùå Hardcoded or generic |\n| Build personalized filters                     | ‚úÖ Yes       | ‚ùå Very limited   |\n| Add interactivity (e.g., UI)                 | ‚úÖ Yes       | ‚ùå Harder to justify results |","metadata":{}},{"cell_type":"markdown","source":"\n### What actually done in this notebook\n- Qwen is the Storyteller & Recommender ‚Äì creative, expressive, knows a lot.\n- Dataset is the Library ‚Äì full of facts, lists, numbers, and structure.\n\nYou wouldn‚Äôt ask a storyteller to guess what books are in a library ‚Äî instead, show them the shelves and say:\n\"From these books, which would you recommend to a fantasy fan?\"\nThat‚Äôs exactly what our notebook does!\n","metadata":{}}]}